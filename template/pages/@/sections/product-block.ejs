<%
const stamps = _.cms('stamps') || {}
let stampsList
if (stamps && Array.isArray(stamps.stamps_list) && stamps.stamps_list.length) {
  stampsList = stamps.stamps_list
}
%>

<section>
  <div id="product-block" class="tf-main-product section-image-zoom">
    <div class="container">
      <section
        id="product"
        class="product bg-white"
        data-to-render="true"
        data-product-id="<%= _.state._id %>"
        data-sku="<%= _.state.sku %>"
      >
        <div id="product-dock">
          <!--
            `TheProduct` should be rendered (hydrated) here:
            https://developers.e-com.plus/storefront/@ecomplus/storefront-components/docs/TheProduct.html
          -->
        </div>

        <div class="row">
          <!-- Left Column - Product Images -->
          <div class="col-md-6">
            <div class="tf-product-media-wrap bg-white thumbs-default" id="product-gallery">
              
            </div>
          </div>

          <!-- Right Column - Product Info -->
          <div class="col-md-6">
            <div class="tf-product-info-wrap bg-white position-relative">
              <div class="tf-zoom-main"></div>
              <div class="tf-product-info-list style-2 justify-content-xl-end">
                <div class="tf-product-info-content">
                  <!-- Product Header -->
                  <div class="infor-heading">
                    <% if (_.state.categories && _.state.categories.length) { %>
                      <p class="caption">
                        <%= _.dictionary('categories') || 'Categories' %>:
                        <a href="/<%= _.state.categories[0].slug %>" class="link text-secondary">
                          <%= _.state.categories[0].name %>
                        </a>
                      </p>
                    <% } %>

                    <h5 class="product-info-name fw-semibold">
                      <%= _.ecomUtils.name(_.state) %>
                    </h5>
                    
                    <ul class="product-info-rate-wrap m-0">
                      <!-- Star Rating -->
                      <% if (_.state.reviews && _.state.reviews.rating) { %>
                        <li class="star-review">
                          <ul class="list-star">
                            <% for (let i = 1; i <= 5; i++) { %>
                              <li>
                                <i class="icon-star <%= i <= Math.round(_.state.reviews.rating) ? '' : 'text-main-4' %>"></i>
                              </li>
                            <% } %>
                          </ul>
                          <% if (_.state.reviews.total) { %>
                            <p class="caption text-main-2">
                              <%= _.dictionary('reviews') || 'Reviews' %> (<%= _.state.reviews.total %>)
                            </p>
                          <% } %>
                        </li>
                      <% } %>
                      
                      <!-- Sales count -->
                      <% if (_.state.sales) { %>
                        <li>
                          <p class="caption text-main-2 m-0"><%= _.dictionary('sold') || 'Vendidos' %>: <%= _.state.sales %></p>
                        </li>
                      <% } %>
                      
                      <!-- SKU -->
                      <li>
                        <p class="caption text-main-2 m-0">
                          <%= _.dictionary('sku') || 'SKU' %>: <%= _.state.sku %>
                        </p>
                      </li>
                    </ul>
                  </div>

                  <!-- Pricing Info -->
                  <div class="infor-center" id="product-actions">
                                      
                  </div>

                  
                

                  <!-- Product Description -->
                  <% if (_.state.short_description) { %>
                    <div class="infor-bottom">
                      <h6 class="fw-semibold">Sobre o produto</h6>
                      <ul class="product-about-list m-0">
                        <li>
                          <p class="body-text-3 m-0">
                            <%= _.state.short_description %>
                          </p>
                        </li>
                      </ul>
                    </div>
                  <% } %>
                  
                  <div class="shipping"></div>
                  
                </div>
              </div>
            </div>
          </div>
        </div>

        <%- await include('@/helpers/widgets-append', {
          _, opt: {}, field: 'productSlots'
        }) %>
      </section>

      <%- await include('@/helpers/widgets-append', {
        _, opt: {}, field: 'productBlockAppend'
      }) %>
    </div>
  </div>
</section>

<!-- Product Schema.org JSON-LD for SEO -->
<%
const productJsonLd = {
  '@context': 'http://schema.org',
  '@type': 'Product',
  sku: _.state.sku,
  description: _.state.short_description || _.state.meta_description || _.ecomUtils.name(_.state),
  name: _.ecomUtils.name(_.state),
  offers: {
    '@type': 'Offer',
    url: `https://${_.settings.domain}/${_.state.slug}`,
    availability: `${(_.ecomUtils.inStock(_.state) ? 'In' : 'OutOf')}Stock`,
    priceCurrency: _.settings.currency,
    price: _.ecomUtils.price(_.state),
    itemCondition: `http://schema.org/${(_.state.condition === 'new' ? 'New' : 'Used')}Condition`,
    priceValidUntil: _.ecomUtils.onPromotion(_.state) && _.state.price_effective_date && _.state.price_effective_date.end
      ? _.state.price_effective_date.end.slice(0, 10)
      : undefined,
    seller: {
      '@type': 'Organization',
      name: _.settings.name || _.store.name
    }
  }
}

if (_.state.brands && _.state.brands[0]) {
  productJsonLd.brand = {
    '@type': 'Brand',
    name: _.state.brands[0].name
  }
}

if (_.state.pictures && _.state.pictures.length) {
  productJsonLd.image = _.ecomUtils.img(_.state, null, 'zoom').url
    .replace(/(\w+\.)?(ecoms\d)\.com/i, '$2-nyc3.nyc3.cdn.digitaloceanspaces.com')
}

if (_.state.mpn && _.state.mpn[0]) {
  productJsonLd.mpn = _.state.mpn[0]
}

if (_.state.gtin && _.state.gtin[0]) {
  productJsonLd.gtin = _.state.gtin[0]
}
%>
<script id="product-block-jsonld" type="application/ld+json"><%-
  JSON.stringify(productJsonLd)
%></script>

<!-- Initialize Product Gallery -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
  // Update JSON-LD for variations
  setTimeout(() => {
    const urlParams = new URLSearchParams(window.location.search);
    const variationId = urlParams.get('variation_id');
    const variations = window._context.body && window._context.body.variations;
    if (Array.isArray(variations) && variationId) {
      const selectedVariation = variations.find(variation => variation._id === variationId);
      if (selectedVariation) {
        const $jsonLd = document.querySelector('#product-block-jsonld');
        const jsonLd = JSON.parse($jsonLd.innerText);
        jsonLd.sku = selectedVariation.sku;
        jsonLd.offers.price = selectedVariation.price;
        jsonLd.name = (selectedVariation.name && selectedVariation.name.replace('"', '')) || jsonLd.name;
        jsonLd.offers.url = `${jsonLd.offers.url}?variation_id=${variationId}`;
        document.querySelector('#product-block-jsonld').innerText = JSON.stringify(jsonLd);
      }
    }
  }, 50);
});
</script>


<section class="tf-sp-4">
  <div class="container">
    <div class="flat-animate-tab flat-container bg-white flat-title-tab-product-des r-8" id="product-description-tabs">
      <div class="flat-title-tab text-center">
        <ul class="menu-tab-line m-0 p-0 bg-white" role="tablist" id="product-tabs-nav">
          <!-- Tabs serão injetados aqui via JavaScript -->
        </ul>
      </div>
      <div class="tab-content " id="product-tabs-content">
        <!-- Conteúdo das abas será injetado aqui via JavaScript -->
      </div>
    </div>
  </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function() {
      // Variável para armazenar o HTML original da descrição
      const originalDescription = $('#description').html();
      
      if (originalDescription) {
        // Função para transformar o conteúdo em abas
        function convertToTabs() {
          // Limpar as áreas onde inseriremos os novos elementos
          $('#product-tabs-nav').empty();
          $('#product-tabs-content').empty();
          
          // Encontrar todos os cards no HTML original
          const cards = $(originalDescription).filter('.card');
          
          // Para cada card, criar uma aba
          cards.each(function(index) {
            const cardHeader = $(this).find('.card-header');
            const cardId = cardHeader.attr('href');
            const tabId = cardId.replace('#', '');
            const tabTitle = cardHeader.find('span').text();
            const tabContent = $(this).find('.card-body').html();
            
            // Criar aba no nav
            const isActive = index === 0 ? ' active' : '';
            const tabNav = `<li class="nav-tab-item" role="presentation">
              <a href="#tab-${tabId}" class="tab-link product-title fw-semibold${isActive}" data-bs-toggle="tab">${tabTitle}</a>
            </li>`;
            
            // Criar conteúdo da aba
            const tabPane = `<div class="tab-pane${isActive ? ' active show' : ''}" id="tab-${tabId}" role="tabpanel">
              <div class="tab-main tab-des px-0 pb-0">
                ${tabContent}
              </div>
            </div>`;
            
            // Adicionar elementos ao DOM
            $('#product-tabs-nav').append(tabNav);
            $('#product-tabs-content').append(tabPane);
          });
          
          // Se não houver cards, exibir o conteúdo completo
          if (cards.length === 0) {
            const tabNav = `<li class="nav-tab-item" role="presentation">
              <a href="#tab-description" class="tab-link product-title fw-semibold active" data-bs-toggle="tab">Descrição</a>
            </li>`;
            
            const tabPane = `<div class="tab-pane active show" id="tab-description" role="tabpanel">
              <div class="tab-main tab-des">
                ${originalDescription}
              </div>
            </div>`;
            
            $('#product-tabs-nav').append(tabNav);
            $('#product-tabs-content').append(tabPane);
          }
        }
        
        // Iniciar a conversão
        convertToTabs();
        
        // Adicionar funcionalidade de mudança de abas
        $(document).on('click', '.menu-tab-line .tab-link', function(e) {
          e.preventDefault();
          const target = $(this).attr('href');
          
          // Remover classes active das outras abas
          $('.menu-tab-line .tab-link').removeClass('active');
          $('.tab-pane').removeClass('active show');
          
          // Adicionar classe active às abas selecionadas
          $(this).addClass('active');
          $(target).addClass('active show');
        });
      }
   });
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
  
  setTimeout(() => {
    $('.shipping-calculator').appendTo('.shipping')
  }, 100);
  setTimeout(() => {
    $('.shipping-calculator').appendTo('.shipping')
  }, 500);
  setTimeout(() => {
    $('.shipping-calculator').appendTo('.shipping')
  }, 1000);
});
</script>